<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置service-->
    <bean id="accountService" class="fun.chenqi.service.impl.AccountServiceImpl">
    </bean>

    <!-- todo 把通知类交给spring来管理 通知是什么：增强的类是谁-->
    <bean id="logger" class="fun.chenqi.logger.Logger"/>
    <!--配置AOP 使用的是aop:config表示开始配置-->
    <aop:config>
        <!-- 配置通用的切入点表达式。如果写在切面标签内部，则表示当前切面可用。如果写在切面标签外部，表示所有切面可用-->
        <aop:pointcut id="po" expression="execution(* fun.chenqi.service.impl.*.*(..))"/>
        <!--配置切面 aspect开始配置切面 TODO 切面:对哪些方法增强-->
        <aop:aspect id="logAdvice" ref="logger">
            <!-- <aop:after method="afterPrintLog" pointcut="execution(* fun.chenqi.service.impl.*.*(..))"/>-->
            <!--配置前置通知 ：在切入点方法执行前 todo 通知类别:代码啥时候执行-->
            <aop:before method="beforePrintLog" pointcut-ref="po"/>
            <!-- 最终通知：无论切入点方法是否正常执行，它都会在其后面执行-->
            <aop:after method="afterPrintLog" pointcut-ref="po"/>
            <!--后置通知：在切入点方法正常执行之后。后置通知和异常通知只能有一个执行-->
            <aop:after-returning method="afterReturningPrintLog" pointcut-ref="po"/>
            <!-- 异常通知：在切入点方法执行产生异常之后-->
            <aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="po"/>
            <!-- 配置环绕通知-->
          <!--  <aop:around method="aroundPrintLog" pointcut-ref="po"/>-->
        </aop:aspect>

    </aop:config>

</beans>